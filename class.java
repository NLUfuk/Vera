// ğŸ‘‡ Ana sÄ±nÄ±f (Base class)
class Animal {
    // ğŸ‘‰ Field'lar (Ã¶zellikler)
    private String name;   // encapsulation Ã¶rneÄŸi
    private int age;

    // ğŸ‘‰ Constructor (yapÄ±cÄ± metot)
    public Animal(String name, int age) {
        this.name = name;
        this.age = age;
    }

    // ğŸ‘‰ Getter ve Setter metodlarÄ± (Encapsulation iÃ§in)
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    // ğŸ‘‰ DavranÄ±ÅŸ (method)
    public void speak() {
        System.out.println(name + " ses Ã§Ä±karÄ±yor.");
    }
}

// ğŸ‘‡ KalÄ±tÄ±m (Inheritance) Ã¶rneÄŸi: Dog sÄ±nÄ±fÄ± Animal'dan tÃ¼remiÅŸtir
class Dog extends Animal {

    private String breed;

    public Dog(String name, int age, String breed) {
        super(name, age);  // Ã¼st sÄ±nÄ±fÄ±n constructor'Ä±nÄ± Ã§aÄŸÄ±r
        this.breed = breed;
    }

    public String getBreed() {
        return breed;
    }

    // ğŸ‘‰ Overriding (Polymorphism) - methodu yeniden tanÄ±mlama
    @Override
    public void speak() {
        System.out.println(getName() + " hav hav diyor! Cinsi: " + breed);
    }
}

// ğŸ‘‡ Soyut sÄ±nÄ±f (Abstraction) Ã¶rneÄŸi
abstract class Vehicle {
    private String model;

    public Vehicle(String model) {
        this.model = model;
    }

    public String getModel() {
        return model;
    }

    // ğŸ‘‰ Soyut metot (implement edilmek zorunda)
    public abstract void move();
}

// ğŸ‘‡ Abstraction'Ä± tamamlayan sÄ±nÄ±f
class Car extends Vehicle {

    public Car(String model) {
        super(model);
    }

    @Override
    public void move() {
        System.out.println(getModel() + " araba ilerliyor...");
    }
}

public class Main {
    public static void main(String[] args) {
        // ğŸ‘‰ Object creation - nesne oluÅŸturma
        Animal genericAnimal = new Animal("CanlÄ±", 3);
        Dog dog = new Dog("Karabas", 5, "Kangal");
        Car car = new Car("Toyota");

        // ğŸ‘‰ Metot Ã§aÄŸrÄ±sÄ±
        genericAnimal.speak();  // "CanlÄ± ses Ã§Ä±karÄ±yor."
        dog.speak();            // "Karabas hav hav diyor! Cinsi: Kangal"
        car.move();             // "Toyota araba ilerliyor..."

        // ğŸ‘‰ Polymorphism Ã¶rneÄŸi
        Animal a = new Dog("Ã‡omar", 2, "Golden");
        a.speak();  // "Ã‡omar hav hav diyor!" Ã§Ã¼nkÃ¼ Dog classÄ±ndaki override Ã§alÄ±ÅŸÄ±r

        // ğŸ‘‰ Encapsulation Ã¶rneÄŸi
        dog.setName("Karabas GÃ¼ncellendi");
        System.out.println("Yeni isim: " + dog.getName());
    }
}
